@startuml
package com.example.myapplication.service {

    ' ApiService
    interface ApiService {
        + getAllProducts(): Call<List<Product>>
        + createProduct(product: MultipartBody.Part, file: MultipartBody.Part): Call<Product>
        + deleteProduct(id: Long): Call<Boolean>
        + checkout(): Call<String>
        + createOrder(orderRequest: OrderRequest): Call<OrderResponse>
        + loginUser(request: User): Call<LoginResponse>
        + verifySession(sessionId: String): Call<SessionVerificationResponse>
    }

    ' Data classes inside ApiService
    class LoginResponse {
        + sessionId: String
        + role: String
    }

    class SessionVerificationResponse {
        + valid: Boolean
    }

    ' OrderRequest
    class OrderRequest {
        + products: List<Product>
        + totalAmount: Double
    }

    ' OrderResponse
    class OrderResponse {
        + status: String
        + id: String?
        + message: String?
    }

    ' ApiClient
    object ApiClient {
        - retrofit: Retrofit?
        - cookieJar: PersistentCookieJar
        - okHttpClient: OkHttpClient
        + getClient(baseUrl: String): Retrofit
        + getCookie(name: String): String?
        + apiService: ApiService
    }
}

package com.example.myapplication.activities {

    ' CheckoutActivity
    class CheckoutActivity {
        - PREFS_NAME: String
        - CART_KEY: String
        - textViewSummary: TextView
        - textViewTotal: TextView
        - buttonConfirm: Button
        - progressBar: ProgressBar
        - cartItems: MutableList<Product>

        + onCreate(savedInstanceState: Bundle): void
        - loadCartItems(): void
        - displayCartInfo(): void
        - placeOrder(): void
        - clearCart(): void
        - showLoading(loading: Boolean): void
    }

    ' LoginActivity
    class LoginActivity {
        - recyclerView: RecyclerView
        - productAdapter: ProductAdapter
        - btnLogin: Button
        - cookieManager: CookieManager
        + onCreate(savedInstanceState: Bundle): void
        - saveCookieLocally(context: Context, role: String): void
        - login(name: String, password: String): void
    }

    ' MainActivity
    class MainActivity {
        - btnViewCart: Button
        - btnCheckout: Button
        - recyclerView: RecyclerView
        - productAdapter: ProductAdapter
        + onCreate(savedInstanceState: Bundle): void
        - displayProducts(): void
        - openCart(): void
        - proceedToCheckout(): void
    }

    ' MapActivity
    class MapActivity {
        - mapView: MapView
        - fusedLocationClient: FusedLocationProviderClient
        - locationCallback: LocationCallback?
        - userMarker: Marker?
        + onCreate(savedInstanceState: Bundle): void
        - addStoreMarkers(locations: List<Map<String, Serializable>>): void
        - updateMarker(userLocation: GeoPoint): void
        - getUserLocation(): void
    }

    ' NewProductActivity
    class NewProductActivity {
        - recyclerView: RecyclerView
        - productAdapter: ProductAdapter
        - imageViewProduct: ImageView
        - btnSelectImage: Button
        - btnNewProduct: Button
        - IMAGE_PICK_CODE: Int
        - CAMERA_REQUEST_CODE: Int
        - selectedImageUri: URI?
        - selectedImageFile: File?

        + onCreate(savedInstanceState: Bundle): void
        - openImageChooser(): void
        - onActivityResult(requestCode: Int, resultCode: Int, data: Intent?): void
        - getFilePathFromUri(uri: Uri): String
        - createProduct(name: String, price: Double, image: File): void
    }

    ' CartActivity (a√±adida)
    class CartActivity {
        - recyclerView: RecyclerView
        - cartAdapter: CartAdapter
        - textViewTotalPrice: TextView
        - buttonBack2: MaterialButton
        - buttonCheckout: MaterialButton
        - buttonClearCart: MaterialButton
        - cartItems: MutableList<Product>
        - PREFS_NAME: String
        - CART_KEY: String

        + onCreate(savedInstanceState: Bundle): void
        + onResume(): void
        - loadCartItems(): void
        - saveCartItems(): void
        - removeFromCart(product: Product): void
        - clearCart(): void
        - updateTotalPrice(): void
    }
}

package com.example.myapplication.model {
    ' Product
    class Product {
        + id: Long
        + name: String
        + price: Double
        + imagePath: String
    }

    ' User
    class User {
        + username: String
        + password: String
    }
}

package com.example.myapplication.adapter {
    ' ProductAdapter
    class ProductAdapter {
        - context: Context
        - productList: MutableList<Product>
        - onDeleteClick: (Product) -> Unit
        - onAddToCartClick: (Product) -> Unit

        + onCreateViewHolder(parent: ViewGroup, viewType: Int): ProductViewHolder
        + onBindViewHolder(holder: ProductViewHolder, position: Int): void
        + getItemCount(): Int
        + removeProduct(product: Product): void
    }

    ' CartAdapter
    class CartAdapter {
        - cartItems: MutableList<Product>
        - removeCallback: (Product) -> Unit

        + onCreateViewHolder(parent: ViewGroup, viewType: Int): CartViewHolder
        + onBindViewHolder(holder: CartViewHolder, position: Int): void
        + getItemCount(): Int
        + updateCart(newCartItems: MutableList<Product>): void
    }
}

package com.example.myapplication.utils {
    class PersistentCookieJar
}

' Relationships
ApiService o-- LoginResponse
ApiService o-- SessionVerificationResponse
ApiService --> OrderRequest
ApiService --> OrderResponse
CheckoutActivity --> Product
CheckoutActivity --> TextView
CheckoutActivity --> Button
CheckoutActivity --> ProgressBar
CheckoutActivity --> ApiService
LoginActivity --> RecyclerView
LoginActivity --> ProductAdapter
LoginActivity --> Button
LoginActivity --> CookieManager
LoginActivity --> ApiService
MainActivity --> Button
MainActivity --> RecyclerView
MainActivity --> ProductAdapter
MainActivity --> ApiService
MapActivity --> MapView
MapActivity --> FusedLocationProviderClient
MapActivity --> LocationCallback
MapActivity --> Marker
NewProductActivity --> RecyclerView
NewProductActivity --> ProductAdapter
NewProductActivity --> ImageView
NewProductActivity --> Button
NewProductActivity --> URI
NewProductActivity --> File
NewProductActivity --> Product
NewProductActivity --> ApiService
ProductAdapter --> Product
CartAdapter --> Product
CartAdapter --> Button
CartActivity --> RecyclerView
CartActivity --> CartAdapter
CartActivity --> TextView
CartActivity --> MaterialButton
CartActivity --> Product
CartActivity --> ApiService
ApiClient --> ApiService
ApiClient --> PersistentCookieJar

@enduml
